from ament_index_python.packages import get_package_share_path
import launch
from launch.actions import IncludeLaunchDescription
import launch_ros.actions


def generate_launch_description():
    return launch.LaunchDescription([
        IncludeLaunchDescription(str(get_package_share_path('realsense2_camera') / 'launch/rs_launch.py'),
                                 launch_arguments={
                                    'camera_name': 'camL',
                                    'camera_namespace': 'camera',
                                    'serial_no': '_819112071701',
                                    'enable_color': 'true',
                                    'rgb_camera.color_profile': '1280x720x15',
                                    'rgb_camera.color_format': 'RGB8',
                                    'rgb_camera.enable_auto_exposure' : 'true',
                                    'enable_depth': 'true',
                                    'enable_infra': 'false',
                                    'enable_infra1': 'false',
                                    'enable_infra2': 'false',
                                    'depth_module.depth_profile': '848x480x15',
                                    'depth_module.depth_format': 'Z16',
                                    'depth_qos': 'SENSOR_DATA',
                                    # 'depth_module.infra_profile',   'default': '0,0,0', 'description': 'infra streams (0/1/2) profile'},
                                    # 'depth_module.infra_format',    'default': 'RGB8', 'description': 'infra0 stream format'},
                                    # 'depth_module.infra1_format',   'default': 'Y8', 'description': 'infra1 stream format'},
                                    # 'depth_module.infra2_format',   'default': 'Y8', 'description': 'infra2 stream format'},
                                    'enable_sync': 'true',
                                    # 'enable_rgbd': 'false',
                                    # 'enable_gyro': 'false',
                                    # 'enable_accel': 'false',
                                    # 'gyro_fps': '0', 
                                    # 'accel_fps': '0', 
                                    # 'unite_imu_method': "0",
                                    # 'clip_distance': '-2.',
                                    # 'angular_velocity_cov': '0.01',
                                    # 'linear_accel_cov': '0.01',
                                    'pointcloud.enable': 'false',
                                    'pointcloud.stream_filter': '2', 
                                    'pointcloud.stream_index_filter': '0', 
                                    'pointcloud.ordered_pc': 'false',
                                    'pointcloud.allow_no_texture_points': 'false',
                                    'pointcloud_qos': 'SENSOR_DATA',
                                    'align_depth.enable': 'true',
                                    'colorizer.enable': 'false',
                                    # 'decimation_filter.enable': 'false',
                                    'spatial_filter.enable': 'true', 
                                    # 'spatial_filter.holes_fill': "5",
                                    'temporal_filter.enable': 'true',
                                    # 'disparity_filter.enable': 'false',
                                    # 'hole_filling_filter.enable': 'true',
                                    # 'hole_filling_filter.holes_fill.': '2',

                                    # 'hdr_merge.enable': 'false', 
                                    # 'depth_module.exposure': '8500',
                                    # 'depth_module.gain' : '16',
                                    # 'depth_module.hdr_enabled': 'false',
                                    # 'depth_module.enable_auto_exposure': 'true',
                                    # 'depth_module.exposure.1': '7500', 
                                    # 'depth_module.gain.1': '16',
                                    # 'depth_module.exposure.2': '1', 
                                    # 'depth_module.gain.2': '16',
                                 }.items()
                            ), 
            launch_ros.actions.Node(
                package="camera_edge", executable="edge_detect", name="camera",
                remappings=[
                            ('/camera/color/image_rect_raw', '/camera/camL/color/image_raw'),
                            ('/camera/aligned_depth_to_color/image_rect_raw', '/camera/camL/aligned_depth_to_color/image_raw'),
                            ('/camera/depth/camera_info', '/camera/camL/aligned_depth_to_color/camera_info'),
                            ('/camera/depth/image_edge', '/camera/camL/depth/img_edge'),
                            ('/camera/depth/border/points', '/camera/camL/depth/pc_edge')],
                parameters=[{
                    "frame_id": "/camL_link",
                    "frame_height": 360,
                    "frame_bottom": 720,
                    "min_range": 0.0,
                    "max_range": 4.0,
                    "min_height": -1.0,
                    "max_height": 1.0,
                    "edge_type": 2,
                    "apply_blur_pre": True,
                    "apertureSize": 3,
                    'canny_threshold1': 50,
                    "canny_threshold2": 150,
                    "L2gradient": False,
                    "apply_blur_post": True,
                    "postBlurSize": 3,
                    "postBlurSigma": 3.2,
                    "morph_iteration": 1,
                    "apply_erode": False
                }]
            ),
        launch_ros.actions.Node(
            package='rviz2', executable='rviz2', name='rviz2', output='screen',
            arguments=['-d', str(get_package_share_path('camera_edge') / 'launch/default.rviz')],
        ),
    ])